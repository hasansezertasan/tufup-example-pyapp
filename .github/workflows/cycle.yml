---
name: Update Cycle
on: [push, workflow_dispatch]
jobs:
  build:
    name: Build on ${{ matrix.os }} for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: ${{ github.ref == 'refs/heads/main' }}
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: windows
          # Disable x86_64-apple-darwin for now.
          # - os: macos-latest
          #   target: x86_64-apple-darwin
          #   platform: macos
          - os: macos-latest
            target: aarch64-apple-darwin
            platform: macos
    defaults:
      run:
        # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsshell
        shell: bash
    steps:
      # Step 1: Check out the repository
      # Description: Checks out the repository so that the workflow can access its contents.
      - name: Checkout repository
        uses: actions/checkout@v4
      # Step 2: Install mise using the specified action
      # Description: Installs mise, a tool for managing tools.
      - name: Install mise
        uses: jdx/mise-action@v2
      # Step 3: Check
      # Description: Runs the style:lint and style:format commands using mise.
      - name: Check style
        if: runner.os != 'Windows'
        run: mise ci
      - name: Set up the build environment
        shell: bash
        run: |
          mise run prepare
      - name: Initialize Repository
        shell: bash
        run: mise run repo:init
      - name: Mock develop v1.0.0
        shell: bash
        run: |
          export APP_VERSION=1.0.0
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          export SETUPTOOLS_SCM_PRETEND_VERSION=$APP_VERSION
          uv sync --reinstall-package application
      - name: Create v1.0.0 bundle
        shell: bash
        run: mise run build:pyinstaller
      - name: Add v1.0.0 to the repository
        shell: bash
        run: uv run tufup targets add $APP_VERSION $PYINSTALLER_DIST_DIR $SERVER_KEYS_DIR --skip-patch
      - name: Mock install v1.0.0
        shell: bash
        run: mise run mock:install
      - name: Verify v1.0.0 installation
        shell: bash
        run: mise run build:verify
      - name: Mock develop v2.0.0
        shell: bash
        run: |
          export APP_VERSION=2.0.0
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          export SETUPTOOLS_SCM_PRETEND_VERSION=$APP_VERSION
          uv sync --reinstall-package application
      - name: Create v2.0.0 bundle
        shell: bash
        run: mise run build:pyinstaller
      - name: Add v2.0.0 to the repository
        shell: bash
        run: uv run tufup targets add $APP_VERSION $PYINSTALLER_DIST_DIR $SERVER_KEYS_DIR --skip-patch
      - name: Run update server and update from v1.0.0 to v2.0.0
        shell: bash
        run: |
          mise run repo:serve
          mise run build:check
      - name: Verify v2.0.0 installation
        shell: bash
        run: mise run build:verify
